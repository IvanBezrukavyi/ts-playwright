name: Running Playwright Tests

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  schedule:
    # Run tests on a daily basis at 9:30 AM UTC
    - cron: "30 9 * * *"

jobs:
  test:
    name: Run Playwright Tests
    runs-on: ubuntu-latest

    env:
      AUTH_LOGIN_END_POINT: ${{ secrets.AUTH_LOGIN_END_POINT }}
      AUTH_FILE: ${{ secrets.AUTH_FILE }}
      CLIENT_APP_URL: ${{ secrets.CLIENT_APP_URL }}
      USER_EMAIL: ${{ secrets.USER_EMAIL }}
      USER_PASSWORD: ${{ secrets.USER_PASSWORD }}
      SINGLE_FILE_PATH: ${{ secrets.SINGLE_FILE_PATH}}
      MULTI_FILE_PATHS: ${{ secrets.MULTI_FILE_PATHS}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache Node Modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install Dependencies
        run: |
          npm ci

      - name: Store Playwright Version
        run: |
          PLAYWRIGHT_VERSION=$(node -p "require('./package.json').devDependencies['@playwright/test']")
          echo "PLAYWRIGHT_VERSION=${PLAYWRIGHT_VERSION}" >> $GITHUB_ENV

      - name: Cache Playwright Browsers for Playwright's Version
        id: cache-playwright-browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ env.PLAYWRIGHT_VERSION }}-${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - name: Install Playwright
        if: steps.cache-playwright-browsers.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps
  
      - name: Install Playwright Dependencies
        if: steps.cache-playwright-browsers.outputs.cache-hit == 'true'
        run: npx playwright install-deps

      - name: Run Tests
        run: |
          npx playwright test -g clientAppWithExternalDataAndParametriazation.spec.ts
          npx playwright test --grep "@Demoqa|@Web"

      - name: Store Results from Failed Tests
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results/
          retention-days: 7

      - name: Upload Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: logs/
          retention-days: 7

      report:
        name: Generate & Deploy Allure Report
        needs: test
        runs-on: ubuntu-latest
        if: always()  
    
        steps:
          - name: Get Allure history
            uses: actions/checkout@v4
            if: always()
            continue-on-error: true
            with:
              ref: gh-pages
              path: gh-pages

          - name: Checkout source code
            uses: actions/checkout@v4    
      
          - name: Generate Allure Report
            uses: simple-elf/allure-report-action@master
            if: always()
            with:
              allure_results: allure-results
              gh_pages: gh-pages
              allure_report: allure-report
              allure_history: allure-history
      
          - name: Deploy Allure Report to Github Pages
            if: always()
            uses: peaceiris/actions-gh-pages@v3
            env:
              PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              PUBLISH_BRANCH: gh-pages
              PUBLISH_DIR: allure-history